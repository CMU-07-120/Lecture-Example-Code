#use <conio>
#use <string>
#use <parse>

// Main function
int battleship() {

    int[] board = alloc_array(int,25);
    for (int i = 0; i < 25; i++){
        board[i] = 0;
    }

    board[(1 * 5) + 1] = 1;
    board[(2 * 5) + 3] = 1;
    board[(4 * 5) + 4] = 1;
    
    printf("Initial board (hidden for players in real play):\n");
    string state_icon = "";
    for(int print_row = 0; print_row < 5; print_row++){
        for (int col = 0; col < 5; col++){
            int state = board[print_row*5 + col];
            if( state == 0)
                state_icon = "_";
            if( state == 1)
                state_icon = "_";
            if( state == 2)
                state_icon = "X";
            if( state == 3)
                state_icon = "M";               
            printf(" [ %s ] ", state_icon);
        }
        print("\n");
    }


    while(true){
    printf("Please input row:");
    string row = readline();
    printf("Please input column:");
    string column = readline();
    //printf("%d",char_ord(string_charat(row,0)));
    //printf("char:%d",char_ord(string_charat(column,0)));
    printf("guess row:%d guess column: %d\n",char_ord(string_charat(row,0))-48,char_ord(string_charat(column,0))-48);
    bool is_hit = false;
    int index = ((char_ord(string_charat(row,0))-48) * 5) + (char_ord(string_charat(column,0))-48);
    if (board[index] == 1)
    {
        board[index] = 2;
        is_hit= true;
    }
    else if (board[index] == 0)
    {
        board[index] = 3;
        is_hit= false;
    }
    else if (board[index] == 2 || board[index] == 3)
    {
        is_hit= false;
    }
    is_hit= false;
    if(is_hit){
        printf("HIT!!\n");
    }


    printf("\nBoard after shot:\n");
    // print_board(board);

    state_icon = "";
    for(int print_row = 0; print_row < 5; print_row++){
        for (int col = 0; col < 5; col++){
            int state = board[print_row*5 + col];
            if( state == 0)
                state_icon = "_";
            if( state == 1)
                state_icon = "_";
            if( state == 2)
                state_icon = "X";
            if( state == 3)
                state_icon = "M";               
            printf(" [ %s ] ", state_icon);
        }
        print("\n");
    }

    bool game_over = true;
    for(int i = 0; i < 25; i++){
        if(board[i] == 1){
            game_over = false;
        }
    }
    if(game_over){
        printf("GAME OVER");
        return 1;
    }
}

    // Display the board after shots
    printf("\nBoard after shots:\n");
        // Display the board initially (for testing; remove for real play)
    printf("Initial board (hidden for players in real play):\n");
    state_icon = "";
    for(int print_row = 0; print_row < 5; print_row++){
        for (int col = 0; col < 5; col++){
            int state = board[print_row*5 + col];
            if( state == 0)
                state_icon = "_";
            if( state == 1)
                state_icon = "_";
            if( state == 2)
                state_icon = "X";
            if( state == 3)
                state_icon = "M";               
            printf(" [ %s ] ", state_icon);
        }
        print("\n");
    }

    return 0;
}
